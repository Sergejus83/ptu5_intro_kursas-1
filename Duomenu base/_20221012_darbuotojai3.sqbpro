<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/pythoncodeacademy/Duomenu base/darbuotojai3.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure pragmas browser query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="200"/><column_width id="3" width="5315"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,11:mainDARBUOTOJAS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="DARBUOTOJAS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="82"/><column index="2" value="128"/><column index="3" value="164"/><column index="4" value="242"/><column index="5" value="197"/><column index="6" value="185"/><column index="7" value="300"/><column index="8" value="135"/><column index="9" value="190"/><column index="10" value="227"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PROJEKTAS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="82"/><column index="2" value="224"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="SKYRIUS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="82"/><column index="2" value="214"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="teams" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="82"/><column index="2" value="91"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT * FROM person;
SELECT * FROM car;
SELECT * FROM company;
-- sujungiame lentele 2 lenteles
SELECT first_name, last_name, plate FROM person, car WHERE person.car_id = car_id;
SELECT person.first_name, person.last_name, car.plate FROM person, car WHERE person.car_id = car_id;

-- sujungiame lentele 3 lenteles
SELECT first_name, make || &quot; &quot; || model AS &quot;car make model&quot;, name as &quot;company name&quot; FROM person, car, company 
WHERE person.car_id = car.id and person.company_id = company.id ORDER by name;
SELECT first_name, make || &quot; &quot; || model AS &quot;car make model&quot;, name as &quot;company name&quot; FROM person, car, company 
WHERE person.car_id = car.id and person.company_id = company.id AND make=&quot;Ford&quot;;

-- Atlikime tuos pačius veiksmus su JOIN:
SELECT first_name, last_name, plate FROM person JOIN car ON person.car_id = car.id;
SELECT person.first_name, person.last_name, car.plate FROM person JOIN car ON person.car_id = car.id;

-- su trimis lenetelemis JOIN
SELECT person.first_name, person.last_name, car.make, car.model, company.name FROM person 
	JOIN car ON person.car_id = car.id
	JOIN company ON person.company_id = company.id
	WHERE car.make = &quot;Ford&quot;
	ORDER by company.name;
	
-- grupojam su JOIN
SELECT company.name, count(*) FROM person 
	JOIN company ON person.company_id = company.id
	GROUP by company.name;

-- rodom daugiau ne 3 darbotojus
SELECT company.name, count(*) FROM person 
	JOIN company ON person.company_id = company.id
	GROUP by company.name
	HAVING count(*) &gt; 3;

-- Kokie yra Apple kompanijos automobilių numeriai?
SELECT name, plate fROM person
JOIN company ON person.company_id = company.id
JOIN car ON person.car_id = car.id
WHERE company.name = &quot;Apple&quot;;

-- Išrinkime darbuotojus vardus/pavardes mašinų markes ir imon pavadinimus tik iš tų kontorų, kuriose dirba ne daugiau kaip 3 žmonės iš sąrašo
SELECT first_name, last_name, make as car_maker, name as company_name FROM person
	JOIN company on person.company_id = company.id
	JOIN car on person.car_id = car.id
	WHERE company_id IN(
		SELECT company_id from person
			GROUP by company_id
			HAVING count(*) &lt;= 3
		)
		ORDER by company.name;
	
	-- Populiariausias apart standartinio JOIN yra LEFT JOIN, jį ir panagrinėsime:
SELECT first_name, last_name, make, model FROM person
	LEFT JOIN car ON person.car_id = car.id;
	
</sql><sql name="SQL 2">-- 1 Išrinkite darbuotojų vardus ir pavardes kartu su projekto pavadinimu, kuriame jie dirba.
SELECT * FROM DARBUOTOJAS LIMIT 1;
SELECT * FROM PROJEKTAS;
SELECT * FROM SKYRIUS;
SELECT VARDAS, PAVARDĖ, PAVADINIMAS FROM DARBUOTOJAS JOIN PROJEKTAS ON DARBUOTOJAS.PROJEKTAS_ID = PROJEKTAS.ID;
-- SELECT VARDAS, PAVARDĖ, PROJEKTAS.PAVADINIMAS FROM DARBUOTOJAS JOIN PROJEKTAS on PROJEKTAS.ID = DARBUOTOJAS.PROJEKTAS_ID  !!!!! blogas

-- 2 Išsirinkite darbuotojų dirbančių projekte Galerija vardus, pavardes ir projekto pavadinimą.
SELECT VARDAS, PAVARDĖ, PAVADINIMAS FROM DARBUOTOJAS JOIN PROJEKTAS ON DARBUOTOJAS.PROJEKTAS_ID = PROJEKTAS.ID WHERE PROJEKTAS.PAVADINIMAS=&quot;Galerija&quot;;

-- 3 Išrinkite visus projekto Projektų valdymas vykdytojus dirbančius Pardavimų skyriuje.
SELECT DARBUOTOJAS.VARDAS, DARBUOTOJAS.PAVARDĖ, PROJEKTAS.PAVADINIMAS, SKYRIUS.PAVADINIMAS FROM DARBUOTOJAS
	JOIN PROJEKTAS on DARBUOTOJAS.PROJEKTAS_ID = PROJEKTAS.ID 
	JOIN SKYRIUS on DARBUOTOJAS.SKYRIUS_ID = SKYRIUS.ID 
		WHERE PROJEKTAS.PAVADINIMAS=&quot;Projektų valdymas&quot; and SKYRIUS.PAVADINIMAS=&quot;Pardavimų&quot;;
	
-- 4 Išrinkite visas moteris, dirbančias projekte Projektų valdymas ir išveskite į ekraną jų vardus, pavardes ir projekto pavadinimą.
SELECT DARBUOTOJAS.VARDAS, DARBUOTOJAS.PAVARDĖ, PROJEKTAS.PAVADINIMAS FROM DARBUOTOJAS 
	JOIN PROJEKTAS on DARBUOTOJAS.PROJEKTAS_ID = PROJEKTAS.ID 
	WHERE (PROJEKTAS.PAVADINIMAS=&quot;Projektų valdymas&quot;) and 
	(DARBUOTOJAS.ASMENS_KODAS LIKE '4%' or DARBUOTOJAS.ASMENS_KODAS LIKe '6__________');
		
-- 5 Išrinkite skyrių pavadinimus su juose dirbančių darbuotojų skaičiumi.
SELECT SKYRIUS.PAVADINIMAS, count(*) FROM DARBUOTOJAS
JOIN SKYRIUS on DARBUOTOJAS.SKYRIUS_ID = SKYRIUS.ID
GROUP by SKYRIUS.PAVADINIMAS
HAVING count(*) &gt; 0;

-- 6 Apribokite #5 užklausos rezultatą taip, kad rodytų tik tuos skyrius kur dirba bent 5 darbuotojai.
SELECT SKYRIUS.PAVADINIMAS, count(*) FROM DARBUOTOJAS
JOIN SKYRIUS on DARBUOTOJAS.SKYRIUS_ID = SKYRIUS.ID
GROUP by SKYRIUS.PAVADINIMAS
HAVING count(*) &gt;=5;
		
-- 7 Išrinkite darbuotojus (vardus, pavardes, pareigas) kartu su skyrių, kuriuose jie dirba pavadinimais, tačiau nesančius tų skyrių vadovais.
SELECT VARDAS, PAVARDĖ, PAREIGOS, SKYRIUS.PAVADINIMAS from DARBUOTOJAS
	JOIN SKYRIUS on DARBUOTOJAS.SKYRIUS_ID = SKYRIUS.ID 
		WHERE SKYRIUS.PAVADINIMAS is NOT &quot;Vadovybė&quot;;

-- 8 Sukurkite naują įrašą lentelėje “DARBUOTOJAS” (asmens kodas: 38807117896, vardas: Pranas, pavardė:Logis, Dirba nuo: 2009-11-12, visa kita - Null).
INSERT INTO DARBUOTOJAS (ASMENS_KODAS, VARDAS, PAVARDĖ, DIRBA_NUO)
VALUES (&quot;38807117896&quot;, &quot;Pranas&quot;, &quot;Logis&quot;, date('2009-11-12'));
		
-- 9 Išrinkite darbuotojų vardus, pavardes ir skyriaus pavadinimą. Rodykite, net ir tuos darbuotojus, kurie nedirba jokiame skyriuje 
--(skyriaus pavadinimą pasiimkite iš lentelės SKYRIUS).
SELECT VARDAS, PAVARDĖ, SKYRIUS.PAVADINIMAS from DARBUOTOJAS, SKYRIUS
	JOIN SKYRIUS on DARBUOTOJAS.SKYRIUS_ID = SKYRIUS.ID;

		
		
	



</sql><current_tab id="0"/></tab_sql></sqlb_project>
